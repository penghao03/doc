(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{165:function(t,i,s){"use strict";s.r(i);var e=s(0),a=Object(e.a)({},function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("应用管理包括应用新增，修改，删除，绑定设备及修改等功能\n"),s("img",{attrs:{src:t.$withBase("/img/appManage.png"),alt:"appManage"}})]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("添加应用按钮，出现添加框，如图所示：\n"),s("img",{attrs:{src:t.$withBase("/img/addApp.png"),alt:"addApp"}})]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),s("img",{attrs:{src:t.$withBase("/img/appCallBack.png"),alt:"appCallBack"}}),t._v(" "),t._m(9)])},[function(){var t=this.$createElement,i=this._self._c||t;return i("h1",{attrs:{id:"应用管理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#应用管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 应用管理")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("我们可以对其进行 删除，绑定回调地址，条件查询应用等操作。")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"warning custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("注意事项：")]),this._v(" "),i("ul",[i("li",[this._v("说明：回调地址——第三方应用接收设备信息的地址，当设备发送信息时，信息内容最终会通过此回调地址将消息发送到第三方应用")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"添加应用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#添加应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 添加应用")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("输入您要创建的应用 id（全局唯一）,应用名称，选择应用协议，确定，完成应用添加操作后，应用管理列表出现的新添加的应用信息")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"删除应用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除应用")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("‘删除’按钮，操作成功后，设备列表中相应的应用信息已经被删除了")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"回调地址绑定"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#回调地址绑定","aria-hidden":"true"}},[this._v("#")]),this._v(" 回调地址绑定")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("添加完应用之后，用户可以对该应用添加一个回调地址，用来接收设备发生的消息。当平台接收到应用发送的消息后会通过此配置的地址将消息转发到相应的地方。")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("详情")]),this._v(" "),i("ul",[i("li",[this._v("如图，点击应用操作按钮，弹出配置框，当用户配置回调地址 url 和 token 后，进行绑定验证，后台通过 GET 方式请求该 url，并携带 token 参数，如 http://10.23.431.3/api/notify?token=djifsdfdi 。这时候需要用户在自己的第三方应用中相应的接口 /api/notify 中直接将 token 的值 djifsdfdi 以字符串的形式返回给接口调用方即可。通过此过程，表明用户配置的 url 是有效的。")]),this._v(" "),i("li",[this._v("上面是一个接受 GET 请求http://10.23.431.3/api/notify 的接口用于验证 url，另外，需要提供一个接受 POST 请求的接口 http://10.23.431.3/api/notify 需要提供一个 POST 方法，用来接收设备的消息。\n设备消息转发 post 请求配置的回调地址，参数为 JSON 格式的字符串，用户在接口中可以通过 Map 类型参数来接收，也可以用 String 或 Object 接收")])])])}],!1,null,null,null);a.options.__file="appManage.md";i.default=a.exports}}]);